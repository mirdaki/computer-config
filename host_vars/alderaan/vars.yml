---

ansible_ssh_host: "{{ secret_alderaan_host }}"
local_hostname: "{{ secret_local_hostname }}"

# playbook

mash_playbook_generic_secret_key: "{{secret_mash_playbook_generic_secret_key}}"

# system

system_security_ssh_enabled: true
system_security_ssh_rootlogin: false
# system_security_ssh_passwordauth: false
# system_security_ssh_authorizedkeys_auto: []

# docker

mash_playbook_docker_installation_enabled: true
devture_docker_sdk_for_python_installation_enabled: true

# com.devture.ansible.role.timesync

devture_timesync_installation_enabled: true

# com.devture.ansible.role.traefik

mash_playbook_reverse_proxy_type: playbook-managed-traefik
devture_traefik_config_certificatesResolvers_acme_email: "{{ secret_lets_encrypt_email }}"

devture_traefik_dashboard_enabled: true
devture_traefik_dashboard_hostname: "{{ local_hostname }}"
devture_traefik_dashboard_basicauth_user: "{{ secret_devture_traefik_dashboard_basicauth_user }}"
devture_traefik_dashboard_basicauth_password: "{{ secret_devture_traefik_dashboard_basicauth_password }}"

devture_traefik_certResolver_primary: ""
devture_traefik_config_entrypoint_web_secure_enabled: false
devture_traefik_entrypoint_primary: web

# com.devture.ansible.role.postgres

devture_postgres_enabled: true
devture_postgres_connection_password: "{{ secret_devture_postgres_connection_password }}"

# miniflux

miniflux_enabled: true
miniflux_hostname: "miniflux.{{ local_hostname }}"
miniflux_admin_login: "{{ secret_miniflux_admin_login }}"
miniflux_admin_password: "{{ secret_miniflux_admin_password }}"

# gitea

gitea_enabled: true
gitea_ssh_port: 222
gitea_hostname: "gitea.{{ local_hostname }}"

# grafana

grafana_enabled: true
grafana_hostname: "grafana.{{ local_hostname }}"
grafana_default_admin_user: "{{ secret_grafana_default_admin_user }}"
grafana_default_admin_password: "{{ secret_default_admin_password }}"

grafana_provisioning_datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: "http://{{ prometheus_identifier }}:9090"

grafana_container_additional_networks_additional:
  - "{{ prometheus_container_network }}"

grafana_dashboard_download_urls: |
  {{
    prometheus_node_exporter_dashboard_urls
  }}

# prometheus

prometheus_enabled: true
prometheus_hostname: "prometheus.{{ local_hostname }}"
prometheus_basic_auth_enabled: true
prometheus_basic_auth_username: "{{ secret_prometheus_basic_auth_username }}"
prometheus_basic_auth_password: "{{ secret_prometheus_basic_auth_password }}"

# Built in prometheus exporters
prometheus_self_node_scraper_enabled: true
prometheus_self_node_scraper_static_configs_target: "{{ prometheus_node_exporter_identifier }}:9100"
prometheus_container_additional_networks:
  - "{{ prometheus_node_exporter_container_network }}"

# prometheus-node-exporter
prometheus_node_exporter_enabled: true

# collabora-online

collabora_online_enabled: true
collabora_online_hostname: "collabora.{{ local_hostname }}"
# A password for the admin interface, available at: https://COLLABORA_ONLINE_DOMAIN/browser/dist/admin/admin.html
collabora_online_env_variable_username: "{{ secret_collabora_online_env_variable_username }}"
collabora_online_env_variable_password: "{{ secret_collabora_online_env_variable_password }}"
collabora_online_aliasgroup: "https://{{ nextcloud_hostname | replace('.', '\\.') }}:443"

# nextcloud

nextcloud_enabled: true
nextcloud_hostname: "nextcloud.{{ local_hostname }}"
nextcloud_collabora_app_wopi_url: "{{ collabora_online_url }}"

nextcloud_redis_hostname: mash-nextcloud-redis

# Make sure the Nextcloud service (mash-nextcloud.service) starts after its dedicated Redis service (mash-nextcloud-redis.service)
nextcloud_systemd_required_services_list_custom:
  - "mash-nextcloud-redis.service"

# Make sure the Nextcloud container is connected to the container network of its dedicated Redis service (mash-nextcloud-redis)
nextcloud_container_additional_networks_custom:
  - "mash-nextcloud-redis"
